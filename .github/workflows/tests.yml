on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Run Tests

jobs:
  release:
    name: Run Tests
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: poetry

      - name: Install Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -O
          python install-poetry.py --preview

      - name: Add Poetry to $PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Add versioning plugin
        run: poetry plugin add poetry-version-plugin

      - name: Poetry Version
        run: poetry --version

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-

      - name: Install Deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Run Security Checks
        run: poetry run poe security

      - name: Run Styling Enforcement
        run: poetry run poe check

      - name: Run Style Linting Enforcement
        run: poetry run poe lint

      - name: Run Tests
        run: poetry run poe test

      - name: Codecov
        uses: codecov/codecov-action@v2
